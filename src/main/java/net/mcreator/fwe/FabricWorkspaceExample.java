/*
 *    MCreator note:
 *
 *    If you lock base mod element files, you can edit this file and the proxy files
 *    and they won't get overwritten. If you change your mod package or modid, you
 *    need to apply these changes to this file MANUALLY.
 *
 *
 *    Keep the FabricWorkspaceExampleElements object in this class and all calls to this object
 *    INTACT in order to preserve functionality of mod elements generated by MCreator.
 *
 *    If you do not lock base mod element files in Workspace settings, this file
 *    will be REGENERATED on each build.
 *
 */
package net.mcreator.fwe;

import net.minecraft.util.registry.Registry;
import net.minecraft.util.Identifier;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.Item;
import net.minecraft.item.BlockItem;
import net.minecraft.block.Block;

import net.mcreator.fwe.item.Fooookit;
import net.mcreator.fwe.item.Foodiuit;
import net.mcreator.fwe.item.CopperSwordMaterial;
import net.mcreator.fwe.item.CopperSwordItem;
import net.mcreator.fwe.item.CopperShovelMaterial;
import net.mcreator.fwe.item.CopperShovelItem;
import net.mcreator.fwe.item.CopperPickaxeMaterial;
import net.mcreator.fwe.item.CopperPickaxeItem;
import net.mcreator.fwe.item.CopperIngot;
import net.mcreator.fwe.item.CopperHoeMaterial;
import net.mcreator.fwe.item.CopperHoeItem;
import net.mcreator.fwe.item.CopperAxeMaterial;
import net.mcreator.fwe.item.CopperAxeItem;
import net.mcreator.fwe.block.CopperOreBlock;
import net.mcreator.fwe.block.CopperOre;
import net.mcreator.fwe.block.Bruh;

import net.fabricmc.api.ModInitializer;

public class FabricWorkspaceExample implements ModInitializer {
	public static final Item Foodiuit = new Foodiuit();
	public static final Item CopperIngot = new CopperIngot();
	public static final Item Fooookit = new Fooookit();
	public static final Block Bruh = new Bruh();
	public static final Block CopperOre = new CopperOre();
	public static final Block CopperOreBlock = new CopperOreBlock();
	@Override
	public void onInitialize() {
		Registry.register(Registry.ITEM, new Identifier("fwe", "foodiuit"), Foodiuit);
		Registry.register(Registry.ITEM, new Identifier("fwe", "copper_ingot"), CopperIngot);
		Registry.register(Registry.ITEM, new Identifier("fwe", "fooookit"), Fooookit);
		Registry.register(Registry.ITEM, new Identifier("fwe", "copper_pickaxe"), new CopperPickaxeItem(new CopperPickaxeMaterial()));
		Registry.register(Registry.ITEM, new Identifier("fwe", "copper_axe"), new CopperAxeItem(new CopperAxeMaterial()));
		Registry.register(Registry.ITEM, new Identifier("fwe", "copper_sword"), new CopperSwordItem(new CopperSwordMaterial()));
		Registry.register(Registry.ITEM, new Identifier("fwe", "copper_shovel"), new CopperShovelItem(new CopperShovelMaterial()));
		Registry.register(Registry.ITEM, new Identifier("fwe", "copper_hoe"), new CopperHoeItem(new CopperHoeMaterial()));
		Registry.register(Registry.BLOCK, new Identifier("fwe", "bruh"), Bruh);
		Registry.register(Registry.ITEM, new Identifier("fwe", "bruh"), new BlockItem(Bruh, new Item.Settings().group(ItemGroup.BUILDING_BLOCKS)));
		Registry.register(Registry.BLOCK, new Identifier("fwe", "copper_ore"), CopperOre);
		Registry.register(Registry.ITEM, new Identifier("fwe", "copper_ore"),
				new BlockItem(CopperOre, new Item.Settings().group(ItemGroup.BUILDING_BLOCKS)));
		Registry.register(Registry.BLOCK, new Identifier("fwe", "copper_ore_block"), CopperOreBlock);
		Registry.register(Registry.ITEM, new Identifier("fwe", "copper_ore_block"),
				new BlockItem(CopperOreBlock, new Item.Settings().group(ItemGroup.BUILDING_BLOCKS)));
	}
}
